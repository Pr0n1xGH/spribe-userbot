# ¬©Ô∏è Spribe Userbot, 2023
# This file is a part of Spribe Userbot
# >> https://github.com/Pr0n1xGH/spribe-userbot
# You can redistribute it and/or modify it under the terms of the GNU AGPLv3
# >> https://www.gnu.org/licenses/agpl-3.0.html

from pyrogram import Client, filters

import os, inspect, importlib
import asyncio

@Client.on_message(filters.command('modules', prefixes='-') & filters.me)
async def modules(client, message):
    modules_dir = 'modules'
    modules_functions = {}
    files = os.listdir(modules_dir)

    for file_name in files:
        if file_name.endswith('.py'):
            module_name = file_name[:-3]
            module = importlib.import_module(f'{modules_dir}.{module_name}')

            functions = inspect.getmembers(module, inspect.isfunction)

            modules_functions[module_name] = [function_name for function_name, _ in functions]

    text = "üõ†Ô∏è –í—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:\n\n"
    for module_name, functions in modules_functions.items():
        if module_name == "_excample":
            pass
        else:
            text = text+f"¬ª {module_name}: ({', '.join(functions)})\n"

            await message.edit(text)

    text = text+"\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n¬ª –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è: (–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã)"
    await message.edit(text)

@Client.on_message(filters.command('add_module', prefixes='-') & filters.me)
async def add_module(client, message):
    reply_message = message.reply_to_message

    if reply_message.document:
        file_id = reply_message.document.file_id
        file_name = reply_message.document.file_name

        await client.download_media(file_id, file_name=f'modules/{file_name}')
        await message.edit('‚öôÔ∏è –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\nüõ†Ô∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∫–æ–º–∞–Ω–¥–æ–π -reload —á—Ç–æ-–±—ã –º–æ–¥—É–ª–∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏.')
    else:
        await message.edit('üî¥ –í —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –º–æ–¥—É–ª—è.')

@Client.on_message(filters.command('del_module', prefixes='-') & filters.me)
async def del_module(client, message):
    name_module = ' '.join(message.command[1:])
    try:
        if name_module.endswith(".py") == True:
            pass
        else:
            name_module = name_module+".py"

        if os.path.isfile("modules/"+name_module):
            if name_module == "standart" or name_module == "standart.py":
                await message.edit('üî¥ –ù–µ–∑—è!')
            elif name_module == "help" or name_module == "help.py":
                await message.edit('üî¥ –ù–µ–∑—è!')
            elif name_module == "_excample" or name_module == "_excample.py":
                await message.edit('üî¥ –ù–µ–∑—è!')
            else:
                os.remove("modules/"+name_module)
                await message.edit("üü¢ –ú–æ–¥—É–ª—å –±—ã–ª —É–¥–∞–ª—ë–Ω!")
        else:
            await message.edit("üî¥ –¢–∞–∫–æ–≥–æ –º–æ–¥—É–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    except Exception as e:
        await message.edit("üõ†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n"+e)

@Client.on_message(filters.command('reload', prefixes='-') & filters.me)
async def reload(client, message):
    rbool = ' '.join(message.command[1:])
    if rbool == "True":
        await message.edit('üîÑÔ∏è –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n\nüõ†Ô∏è –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏—Å–∏—Ç —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ —Ç–æ –∑–∞–≥–ª—è–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å(–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã—à–ª–∞ –æ—à–∏–±–∫–∞)')
        await client.restart(block=True)
        await message.edit('‚öôÔ∏è –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª—Å—è.')
    else:
        await message.edit('üîÑÔ∏è –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n\nüõ†Ô∏è –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏—Å–∏—Ç —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ —Ç–æ –∑–∞–≥–ª—è–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å(–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã—à–ª–∞ –æ—à–∏–±–∫–∞)')
        await client.restart(block=False)
        await message.edit('‚öôÔ∏è –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª—Å—è.')

