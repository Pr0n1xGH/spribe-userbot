# ¬©Ô∏è Spribe Userbot, 2023
# This file is a part of Spribe Userbot
# >> https://github.com/Pr0n1xGH/spribe-userbot
# You can redistribute it and/or modify it under the terms of the GNU AGPLv3
# >> https://www.gnu.org/licenses/agpl-3.0.html

import asyncio
import importlib
import json
import os
import re
import time
import zipfile
from pathlib import Path
from platform import python_version
from typing import Optional, List

import glob
import pyunpack
import requests
from pyrogram import Client, filters
from pyrogram import __version__ as verpyro
from pyrogram.types import Message

from .help import add_command_help
from ..base.database import DatabaseTime
from ..main import clear
from ..plugins.help import CMD_HELP
from ..utils import messages
from ..utils.loading import Loader
from ..utils.logger import logger

import requests
import asyncio
import os
import re
import json
from pyrogram import Client, filters
from pyrogram.types import Message

class ModuleManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥—É–ª—è–º–∏"""

    EXCLUDE_MODULES = ["default", "default.py", "help", "help.py", "_example", "_example.py"]

    @staticmethod
    async def download_module(url: str, file_name: str) -> None:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥—É–ª—å –ø–æ URL"""
        response = requests.get(url)
        if response.status_code == 200:
            os.makedirs(os.path.dirname(file_name), exist_ok=True)
            with open(file_name, 'wb') as f:
                f.write(response.content)

    @staticmethod
    async def install_all_modules(message: Message) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏"""
        url = "https://gist.githubusercontent.com/Pr0n1xGH/906c4cc69c24d71ca7d838ba3f7a8504/raw/modules.json"
        response = requests.get(url)
        if response.status_code == 200:
            modules = json.loads(response.text).get('modules', {})
            text = "üõ†Ô∏è **–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π...**\n‚îî **–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ**:\n"

            for module_name, module_url in modules.items():
                try:
                    text += f"¬ª **–ò–¥—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ __{module_name}__**...\n"
                    await message.edit(text)

                    file_name = f"userbot/plugins/{module_url.split('/')[-1]}"
                    await ModuleManager.download_module(module_url, file_name)

                    escaped_module_name = re.escape(f"¬ª **–ò–¥—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ __{module_name}__**...\n")
                    text = re.sub(escaped_module_name, f"¬ª {module_name} ‚úÖ\n", text)
                    await message.edit(text)
                except Exception as e:
                    text += f"¬ª {module_name} ‚ùå (–û—à–∏–±–∫–∞: {str(e)})\n"
                    await message.edit(text)

            return True
        return False

@Client.on_message(filters.command('dlm', prefixes='.') & filters.me)
async def loadmod(client: Client, message: Message) -> None:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π"""
    reply_message = message.reply_to_message

    if not reply_message:
        text = ' '.join(message.command[1:])

        if text.startswith('https://') and text.endswith('.py'):
            file_name = f"userbot/plugins/{text.split('/')[-1]}"
            await ModuleManager.download_module(text, file_name)
            await message.edit(
                '<emoji id=5206607081334906820>‚öô</emoji> ‚ñ∏ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n'
                '<emoji id=5386757912607599167>üõ†Ô∏è</emoji> –ß—Ç–æ–±—ã –º–æ–¥—É–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.reload`'
            )

        elif text == '-all':
            if await ModuleManager.install_all_modules(message):
                await message.edit(
                    '<emoji id=5206607081334906820>‚öô</emoji> ‚ñ∏ –ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\n\n'
                    '<emoji id=5386757912607599167>üõ†Ô∏è</emoji> –ß—Ç–æ–±—ã –º–æ–¥—É–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.reload`'
                )

        else:
            url = "https://gist.githubusercontent.com/Pr0n1xGH/906c4cc69c24d71ca7d838ba3f7a8504/raw/modules.json"
            response = requests.get(url)
            if response.status_code == 200:
                try:
                    modules = json.loads(response.text).get('modules', {})
                    module_url = modules[text]
                    file_name = f"userbot/plugins/{module_url.split('/')[-1]}"
                    await ModuleManager.download_module(module_url, file_name)
                    await message.edit(
                        '<emoji id=5206607081334906820>‚öô</emoji> ‚ñ∏ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n'
                        '<emoji id=5386757912607599167>üõ†Ô∏è</emoji> –ß—Ç–æ–±—ã –º–æ–¥—É–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.reload`'
                    )
                except KeyError:
                    await message.edit(
                        "<emoji id=5210952531676504517>üî¥</emoji> ‚ñ∏ –ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ."
                    )
    else:
        if reply_message.document:
            file_name = reply_message.document.file_name
            file_id = reply_message.document.file_id

            if file_name.endswith(".zip"):
                zip_path = os.path.join("userbot/utils/misc/", file_name)
                dest_path = "userbot/plugins/"

                await client.download_media(file_id, file_name=zip_path)
                os.makedirs(dest_path, exist_ok=True)

                # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ ZIP
                import zipfile
                with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                    zip_ref.extractall(dest_path)

                os.remove(zip_path)
            else:
                file_path = os.path.join("userbot/plugins/", file_name)
                await client.download_media(file_id, file_name=file_path)

            await message.edit(
                '<emoji id=5206607081334906820>‚öô</emoji> ‚ñ∏ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n'
                '<emoji id=5386757912607599167>üõ†Ô∏è</emoji> –ß—Ç–æ–±—ã –º–æ–¥—É–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `.reload`'
            )
        else:
            await message.edit(
                '<emoji id=5210952531676504517>üî¥</emoji> ‚ñ∏ –í —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –º–æ–¥—É–ª—è.'
            )

    await asyncio.sleep(10)
    await message.delete()

@Client.on_message(filters.command('delm', prefixes='.') & filters.me)
async def unloadmod(client: Client, message: Message) -> None:
    """–£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–π"""
    name_module = ' '.join(message.command[1:])
    if not name_module.endswith(".py"):
        name_module += ".py"
        
    try:
        if os.path.isfile("userbot/plugins/" + name_module):
            if name_module in ModuleManager.EXCLUDE_MODULES:
                await message.edit('<emoji id=5210952531676504517>üî¥</emoji> ‚ñ∏ –ù–µ–∑—è!')
            else:
                os.remove("userbot/plugins/" + name_module)
                CMD_HELP.pop(f"{name_module[:-3]}")
                await message.edit("<emoji id=5206607081334906820>üü¢</emoji> ‚ñ∏ –ú–æ–¥—É–ª—å –±—ã–ª —É–¥–∞–ª—ë–Ω!")
        else:
            await message.edit("<emoji id=5210952531676504517>üî¥</emoji> ‚ñ∏ –¢–∞–∫–æ–≥–æ –º–æ–¥—É–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            
    except Exception as e:
        await message.edit("<emoji id=5386757912607599167>üõ†Ô∏è</emoji> ‚ñ∏ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n" + str(e))
        
    await asyncio.sleep(10)
    await message.delete()


@Client.on_message(filters.command('backup', prefixes='.') & filters.me)
async def backup(client: Client, message: Message) -> None:
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –º–æ–¥—É–ª–µ–π"""
    await message.edit('<emoji id=5438274168422409988>‚öô</emoji> ‚ñ∏ –ë—ç–∫–∞–ø –º–æ–¥—É–ª–µ–π. –ü–æ–¥–æ–∂–¥–∏—Ç–µ...')
    
    with zipfile.ZipFile('plugins.zip', 'w', zipfile.ZIP_DEFLATED) as zip_file:
        modules_count = 0
        for root, dirs, files in os.walk("userbot/plugins/"):
            for file in files:
                if (file.endswith('.py') and 
                    file not in ModuleManager.EXCLUDE_MODULES):
                    zip_file.write(
                        os.path.join(root, file),
                        arcname=os.path.basename(file)
                    )
                    modules_count += 1
                    
    await message.delete()
    
    with open("plugins.zip", "rb") as file:
        await client.send_document(
            chat_id=message.chat.id,
            document=file,
            caption=f"<emoji id=5449555539975481957>üì¶</emoji> ‚ñ∏ –ë—ç–∫–∞–ø –º–æ–¥—É–ª–µ–π ({modules_count})"
        )
        
    if os.path.isfile("plugins.zip"):
        os.remove("plugins.zip")


@Client.on_message(filters.command('reload', prefixes='.') & filters.me)
async def reload(client: Client, message: Message) -> None:
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —é–∑–µ—Ä–±–æ—Ç–∞"""
    block = ' '.join(message.command[1:])
    
    try:
        await message.edit('<emoji id=5438274168422409988>üîÑÔ∏è</emoji> ‚ñ∏ –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...')
        await client.restart(block=block == "True")
        reload_cache()
        await message.edit('<emoji id=5438274168422409988>‚öô</emoji> ‚ñ∏ –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª—Å—è.')
        
    except Exception as e:
        await message.edit(
            f'<emoji id=5438274168422409988>üîÑÔ∏è</emoji> ‚ñ∏ –û—à–∏–±–∫–∞...\n\n'
            f'<emoji id=5386757912607599167>üõ†Ô∏è</emoji> {str(e)}'
        )
        
    await asyncio.sleep(3)
    await message.delete()


@Client.on_message(filters.command("logs", ".") & filters.me)
async def _logs(client: Client, message: Message) -> None:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤"""
    cmds = ' '.join(message.command[1:])
    await message.edit("<emoji id=5438274168422409988>üîÑÔ∏è</emoji> –û–±—Ä–∞–±–æ—Ç–∫–∞...")
    
    if cmds == "all":
        zip_name = 'logs.zip'
        with zipfile.ZipFile(zip_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk('logs'):
                for file in files:
                    zipf.write(os.path.join(root, file))
                    
        with open(zip_name, "rb") as file:
            await message.delete()
            await client.send_document(
                chat_id=message.chat.id,
                document=file,
                caption="`logs from Spribe-Userbot`"
            )
            
        if os.path.isfile(zip_name):
            os.remove(zip_name)
            
    else:
        logs_dir = glob.glob("logs/*")
        latest_file = max(logs_dir, key=os.path.getctime)
        
        try:
            file_text = Path(latest_file).read_text(encoding='utf-8')
        except UnicodeDecodeError:
            file_text = Path(latest_file).read_text(encoding='latin-1')
            
        if len(file_text) > 3000:
            await message.delete()
            await client.send_document(
                chat_id=message.chat.id,
                document=latest_file,
                caption="`logs from Spribe-Userbot`"
            )
        else:
            await message.edit(f"logs from Spribe-Userbot \n`{file_text}`")
            
    logger.info("–ë—ã–ª–∏ –≤–∑—è—Ç—ã –ª–æ–≥–∏ –∫–æ–º–∞–Ω–¥–æ–π .logs")


@Client.on_message(filters.command("info", ".") & filters.me)
async def inf(client: Client, message: Message) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–±–æ—Ç–µ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    from userbot.utils import messages
    from .. import start_time
    
    if message.reply_to_message:
        user = message.reply_to_message.from_user
        status = '–û–Ω–ª–∞–π–Ω' if user.status == 'UserStatus.ONLINE' else '–û—Ñ–ª–∞–π–Ω'
        time_info = (f'–°–ª–µ–¥—É—é—â–∞—è –æ—Ñ–ª–∞–π–Ω –¥–∞—Ç–∞: `{user.next_offline_date}`' 
                    if user.status == 'UserStatus.ONLINE' 
                    else f'–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –æ–Ω–ª–∞–π–Ω: `{user.last_online_date}`')
        
        await message.edit(
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ @{user.username}: \n\n"
            f"üõ†Ô∏è ID: `{user.id}`\n"
            f"‚îú –ù–æ–º–µ—Ä: `{user.phone_number if user.is_contact else '–°–∫—Ä—ã—Ç'}`\n"
            f"‚îú –í–∑–∞–∏–º–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç: `{'–ï—Å—Ç—å' if user.is_mutual_contact else '–ù–µ—Ç—É'}`\n"
            f"‚îú –ë–æ—Ç: `{'–î–∞' if user.is_bot else '–ù–µ—Ç'}`\n"
            f"‚îú –ü—Ä–æ–≤–µ—Ä–µ–Ω: `{'–î–∞' if user.is_verified else '–ù–µ—Ç'}`\n"
            f"‚îú –û–≥—Ä–∞–Ω–∏—á–µ–Ω: `{'–î–∞' if user.is_restricted else '–ù–µ—Ç'}`\n"
            f"‚îú –°–∫–∞–º –º–µ—Ç–∫–∞: `{'–ï—Å—Ç—å' if user.is_scam else '–ù–µ—Ç—É'}`\n"
            f"‚îú –§–µ–π–∫ –º–µ—Ç–∫–∞: `{'–ï—Å—Ç—å' if user.is_fake else '–ù–µ—Ç—É'}`\n"
            f"‚îú –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram: `{'–î–∞' if user.is_support else '–ù–µ—Ç'}`\n"
            f"‚îú –ü—Ä–µ–º–∏—É–º: `{'–ï—Å—Ç—å' if user.is_premium else '–ù–µ—Ç—É'}`\n"
            f"‚îú –°—Ç–∞—Ç—É—Å: `{status}`\n"
            f"‚îú {time_info}\n"
            f"‚îî –ù–æ–º–µ—Ä –¥–∞—Ç–∞—Ü–µ–Ω—Ç—Ä–∞: `{user.dc_id}`\n"
        )
        
    else:
        uptime = time.time() - start_time
        modules_count = sum(
            1 for root, dirs, files in os.walk("userbot/plugins/")
            for file in files
            if file.endswith('.py') and file not in ModuleManager.EXCLUDE_MODULES
        )
        
        await message.edit(
            f"üçÉ **`Spribe-Userbot`**\n"
            f"**‚îî –°—Å—ã–ª–∫–∏**: <i>[Github](https://github.com/Pr0n1xGH/spribe-userbot) | "
            f"[Support](https://t.me/devspribe) | [Channel](https://t.me/tgscriptss)</i>\n\n"
            f"**üõ†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å**: `{client.me.mention}`\n"
            f"**‚îú –ö–æ–ª-–≤–æ –º–æ–¥—É–ª–µ–π**: `{modules_count}` \n"
            f"**‚îú –í–µ—Ä—Å–∏—è —é–∑–µ—Ä–±–æ—Ç–∞**: `{messages.Version}` \n"
            f"**‚îú –í–µ—Ä—Å–∏—è Python**: `{python_version()}` \n"
            f"**‚îú –í–µ—Ä—Å–∏—è Pyrogram**: `{verpyro}` \n"
            f"**‚îî –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —é–∑–µ—Ä–±–æ—Ç–∞**: `{DatabaseTime()._format_time_interval(uptime)}` \n\n"
            f"**üïõ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —é–∑–µ—Ä–±–æ—Ç–∞**: `{DatabaseTime().get_first_date()[0]}`\n"
            f"**‚îî –ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏**: `{DatabaseTime().get_uptime()}` \n\n",
            disable_web_page_preview=True
        )
        
        await asyncio.sleep(20)
        await message.delete()


def reload_cache() -> None:
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫—ç—à–∞ –º–æ–¥—É–ª–µ–π"""
    plugins_dir = os.path.join(os.getcwd(), "userbot/plugins")
    modules_to_reload = [
        f"userbot.plugins.{file[:-3]}"
        for file in os.listdir(plugins_dir)
        if file.endswith(".py")
    ]
    
    importlib.invalidate_caches()
    for module in modules_to_reload:
        importlib.import_module(module)


add_command_help(
    "default",
    [
        [".dlm [–û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ/–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è/–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–¥—É–ª—å/-all]", 
         "–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å(–§–ª–∞–≥ `-all` —Å–∫–∞—á–∏–≤–∞–µ—Ç —Å—Ä–∞–∑—É –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏)"],
        [".delm [–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è]", "–£–¥–∞–ª—è–µ—Ç –º–æ–¥—É–ª—å"],
        [".backup", "–î–µ–ª–∞–µ—Ç –±—ç–∫–∞–ø –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"],
        [".logs [all]", "–î–∞—ë—Ç –ª–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞(–±–µ–∑ all) / –î–∞—ë—Ç zip —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ –ª–æ–≥–∞–º–∏"],
        [".info", "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —é–∑–µ—Ä–±–æ—Ç–µ"],
        [".reload", "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —é–∑–µ—Ä–±–æ—Ç–∞"],
    ],
)
